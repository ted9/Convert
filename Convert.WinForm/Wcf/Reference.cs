//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Convert.WinForm.Wcf
{
    using System.Runtime.Serialization;
    using System;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ChequeDataModel", Namespace = "http://schemas.datacontract.org/2004/07/Convert.Wcf.DataContract")]
    [System.SerializableAttribute()]
    public partial class ChequeDataModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount
        {
            get
            {
                return this.AmountField;
            }
            set
            {
                if ((this.AmountField.Equals(value) != true))
                {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UserNameField, value) != true))
                {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "ChequeModel", Namespace = "http://schemas.datacontract.org/2004/07/Convert.Model")]
    [System.SerializableAttribute()]
    public partial class ChequeModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
    {

        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AmountField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountStringField;

        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;

        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Amount
        {
            get
            {
                return this.AmountField;
            }
            set
            {
                if ((this.AmountField.Equals(value) != true))
                {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AmountString
        {
            get
            {
                return this.AmountStringField;
            }
            set
            {
                if ((object.ReferenceEquals(this.AmountStringField, value) != true))
                {
                    this.AmountStringField = value;
                    this.RaisePropertyChanged("AmountString");
                }
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                if ((object.ReferenceEquals(this.UserNameField, value) != true))
                {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }

        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;

        protected void RaisePropertyChanged(string propertyName)
        {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null))
            {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "Wcf.ConvertService")]
    public interface ConvertService
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ConvertService/Translate", ReplyAction = "http://tempuri.org/ConvertService/TranslateResponse")]
        ChequeModel Translate(ChequeDataModel model);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ConvertService/Translate", ReplyAction = "http://tempuri.org/ConvertService/TranslateResponse")]
        System.Threading.Tasks.Task<ChequeModel> TranslateAsync(ChequeDataModel model);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ConvertServiceChannel : ConvertService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConvertServiceClient : System.ServiceModel.ClientBase<ConvertService>, ConvertService
    {

        public ConvertServiceClient()
        {
        }

        public ConvertServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public ConvertServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public ConvertServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public ConvertServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public ChequeModel Translate(ChequeDataModel model)
        {
            return base.Channel.Translate(model);
        }

        public System.Threading.Tasks.Task<ChequeModel> TranslateAsync(ChequeDataModel model)
        {
            return base.Channel.TranslateAsync(model);
        }
    }
}
